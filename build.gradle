plugins {
    id "idea"
    id "application"

    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.0"

    id "org.springframework.boot" version "2.7.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"

    id "com.palantir.docker" version "0.33.0"
    id "com.palantir.git-version" version "0.15.0"
}

group = "io.botscripter"
version gitVersion()

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

application {
    mainClassName = "io.botscripter.helloworld.HelloWorldApplication"
}

bootJar {
    archiveFileName = "hello-world.jar"
}

springBoot {
    buildInfo()
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = "1.18.24"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}

docker {
    dependsOn bootJar
    name "${project.group}/${rootProject.name}:${version}"
    dockerfile file("docker/Dockerfile")
    files bootJar.archivePath, 'docker/run_application.sh'
    buildArgs([JAR_FILE: "${jar.archiveFileName}"])
    pull true
    noCache true
}
