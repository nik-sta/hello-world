plugins {
    id "idea"
    id "application"
    id "maven-publish"

    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id "org.jetbrains.kotlin.plugin.spring" version "1.8.10"

    id "org.springframework.boot" version "3.0.6"
    id "io.spring.dependency-management" version "1.1.0"

    id "com.palantir.docker" version "0.34.0"
}

group = "dev.niksta"
version = "1.0.0"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

application {
    mainClassName = "dev.niksta.helloworld.HelloWorldApplication"
}

springBoot {
    buildInfo()
}

bootJar {
    archiveFileName = "hello-world.jar"
}

jar {
    enabled = false
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.zalando:logbook-logstash:2.14.0"
    implementation "org.zalando:logbook-spring-boot-starter:2.14.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-starter-web"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}

docker {
    dependsOn bootJar
    name "${project.group}/${rootProject.name}:${version}"
    dockerfile file("docker/Dockerfile")
    files bootJar.archiveFile, 'docker/build_application.sh', 'docker/run_application.sh', 'docker/packages.list'
    buildArgs([APP_NAME: 'hello-world', JAR_FILE: 'hello-world.jar'])
    pull true
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/nik-sta/hello-world")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                groupId = project.group
                name = rootProject.name
                description = 'My awesome open-source project.'
                url = 'https://github.com/nik-sta/hello-world'
                packaging = 'jar' // jar is the default, but still set it to make it clear

                licenses {
                    license {
                        name = 'The Unlicense'
                        url = 'https://unlicense.org/'
                    }
                }

                scm {
                    url = 'https://github.com/nik-sta/hello-world'
                    connection = 'scm:git://github.com:nik-sta/hello-world.git'
                    developerConnection = 'scm:git://github.com:nik-sta/hello-world.git'
                }

                developers {
                    developer {
                        id = 'nik-sta'
                        name = 'Nikola StankoviÄ‡'
                        email = 'nikola@stankovic.xyz'
                        organizationUrl = 'https://niksta.dev/'
                    }
                }
            }
        }
    }
}
