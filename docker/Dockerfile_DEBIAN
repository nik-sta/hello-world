# Making here use of a docker multi-stage build
# https://docs.docker.com/develop/develop-images/multistage-build/

# Build-time container
FROM arm64v8/eclipse-temurin:17.0.3_7-jdk as builder
WORKDIR application
ARG JAR_FILE
COPY $JAR_FILE application.jar
RUN jlink --no-header-files --no-man-pages --strip-debug --compress 2 --add-modules ALL-MODULE-PATH --output /opt/java-runtime ##--compress=2
RUN java -Djarmode=layertools -jar application.jar extract

# Run-time container
FROM debian:buster-slim

ARG APP_NAME=app
ARG USER=exie
ARG GROUP=party
ARG LOG_FOLDER=/srv/app/logs

ENV APP=$APP_NAME
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH "${JAVA_HOME}/bin:${PATH}"

## Adding programs for operation
RUN apt-get update && \
    apt-get install -y dumb-init curl jq && \
    apt-get clean && apt-get autoremove && apt-get autoclean && \
    rm -rf /var/cache/apt/archives /var/lib/apt/lists/*

WORKDIR /srv/$APP

COPY run_application.sh /etc

RUN addgroup -system $GROUP && \
    adduser -system --disabled-password --no-create-home $USER --ingroup $GROUP && \
    mkdir -p $LOG_FOLDER && \
    chgrp $GROUP $LOG_FOLDER && \
    chmod g+rwx $LOG_FOLDER && \
    chmod +x /etc/run_application.sh

COPY --from=builder /opt/java-runtime $JAVA_HOME

## Spring Boot Layers
COPY --from=builder application/spring-boot-loader/ ./
COPY --from=builder application/dependencies/ ./
COPY --from=builder application/snapshot-dependencies/ ./
COPY --from=builder application/application/ ./

USER $USER
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["/etc/run_application.sh"]